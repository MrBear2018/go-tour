// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/temp.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoginRequest struct {
	LoginName            string   `protobuf:"bytes,1,opt,name=loginName,proto3" json:"loginName,omitempty"`
	PassWord             string   `protobuf:"bytes,2,opt,name=passWord,proto3" json:"passWord,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e65ea4a38d573ec9, []int{0}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetLoginName() string {
	if m != nil {
		return m.LoginName
	}
	return ""
}

func (m *LoginRequest) GetPassWord() string {
	if m != nil {
		return m.PassWord
	}
	return ""
}

type LoginReply struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReply) Reset()         { *m = LoginReply{} }
func (m *LoginReply) String() string { return proto.CompactTextString(m) }
func (*LoginReply) ProtoMessage()    {}
func (*LoginReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e65ea4a38d573ec9, []int{1}
}

func (m *LoginReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReply.Unmarshal(m, b)
}
func (m *LoginReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReply.Marshal(b, m, deterministic)
}
func (m *LoginReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReply.Merge(m, src)
}
func (m *LoginReply) XXX_Size() int {
	return xxx_messageInfo_LoginReply.Size(m)
}
func (m *LoginReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReply.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReply proto.InternalMessageInfo

func (m *LoginReply) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LoginReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RegisterRequest struct {
	LoginName            string   `protobuf:"bytes,1,opt,name=loginName,proto3" json:"loginName,omitempty"`
	PassWord             string   `protobuf:"bytes,2,opt,name=passWord,proto3" json:"passWord,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e65ea4a38d573ec9, []int{2}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetLoginName() string {
	if m != nil {
		return m.LoginName
	}
	return ""
}

func (m *RegisterRequest) GetPassWord() string {
	if m != nil {
		return m.PassWord
	}
	return ""
}

type RegisterReply struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterReply) Reset()         { *m = RegisterReply{} }
func (m *RegisterReply) String() string { return proto.CompactTextString(m) }
func (*RegisterReply) ProtoMessage()    {}
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e65ea4a38d573ec9, []int{3}
}

func (m *RegisterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterReply.Unmarshal(m, b)
}
func (m *RegisterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterReply.Marshal(b, m, deterministic)
}
func (m *RegisterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterReply.Merge(m, src)
}
func (m *RegisterReply) XXX_Size() int {
	return xxx_messageInfo_RegisterReply.Size(m)
}
func (m *RegisterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterReply proto.InternalMessageInfo

func (m *RegisterReply) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RegisterReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// user标识当前下棋的用户， 注意需要做一个全局原子量来控制谁能成功下棋，否则某个人可以疯狂调用这个接口
// row 和 column 表示这个人下的位置
type PlayRequest struct {
	User                 int64    `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
	Row                  int64    `protobuf:"varint,2,opt,name=row,proto3" json:"row,omitempty"`
	Column               int64    `protobuf:"varint,3,opt,name=column,proto3" json:"column,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayRequest) Reset()         { *m = PlayRequest{} }
func (m *PlayRequest) String() string { return proto.CompactTextString(m) }
func (*PlayRequest) ProtoMessage()    {}
func (*PlayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e65ea4a38d573ec9, []int{4}
}

func (m *PlayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayRequest.Unmarshal(m, b)
}
func (m *PlayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayRequest.Marshal(b, m, deterministic)
}
func (m *PlayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayRequest.Merge(m, src)
}
func (m *PlayRequest) XXX_Size() int {
	return xxx_messageInfo_PlayRequest.Size(m)
}
func (m *PlayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayRequest proto.InternalMessageInfo

func (m *PlayRequest) GetUser() int64 {
	if m != nil {
		return m.User
	}
	return 0
}

func (m *PlayRequest) GetRow() int64 {
	if m != nil {
		return m.Row
	}
	return 0
}

func (m *PlayRequest) GetColumn() int64 {
	if m != nil {
		return m.Column
	}
	return 0
}

// errorCode 返回错误码，例如棋局未开始 -3, 棋局已结束 -1, 内部错误 -2, 操作成功 1, 非法操作 2
// gameAns 下棋之后应该直接获取这一局的结果（win 1, failed-1, unKnow Ans 0）
// 当棋结束之后，继续访问这个接口，应当返回上一次结束的棋的结果；
// 因为A赢棋之后返回值为 {1, 1},它再调用这个接口还是返回{1, 1}，B还要调用这个接口才知道自己返回值为{2, -1}
// 建议增加一个棋局的id， 这样可以获取某一个棋局的结果
type PlayReply struct {
	ErrorCode            int64    `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	GameAns              int64    `protobuf:"varint,2,opt,name=gameAns,proto3" json:"gameAns,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayReply) Reset()         { *m = PlayReply{} }
func (m *PlayReply) String() string { return proto.CompactTextString(m) }
func (*PlayReply) ProtoMessage()    {}
func (*PlayReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e65ea4a38d573ec9, []int{5}
}

func (m *PlayReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayReply.Unmarshal(m, b)
}
func (m *PlayReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayReply.Marshal(b, m, deterministic)
}
func (m *PlayReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayReply.Merge(m, src)
}
func (m *PlayReply) XXX_Size() int {
	return xxx_messageInfo_PlayReply.Size(m)
}
func (m *PlayReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayReply.DiscardUnknown(m)
}

var xxx_messageInfo_PlayReply proto.InternalMessageInfo

func (m *PlayReply) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *PlayReply) GetGameAns() int64 {
	if m != nil {
		return m.GameAns
	}
	return 0
}

type SurrenderRequest struct {
	User                 int64    `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SurrenderRequest) Reset()         { *m = SurrenderRequest{} }
func (m *SurrenderRequest) String() string { return proto.CompactTextString(m) }
func (*SurrenderRequest) ProtoMessage()    {}
func (*SurrenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e65ea4a38d573ec9, []int{6}
}

func (m *SurrenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SurrenderRequest.Unmarshal(m, b)
}
func (m *SurrenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SurrenderRequest.Marshal(b, m, deterministic)
}
func (m *SurrenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SurrenderRequest.Merge(m, src)
}
func (m *SurrenderRequest) XXX_Size() int {
	return xxx_messageInfo_SurrenderRequest.Size(m)
}
func (m *SurrenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SurrenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SurrenderRequest proto.InternalMessageInfo

func (m *SurrenderRequest) GetUser() int64 {
	if m != nil {
		return m.User
	}
	return 0
}

type SurrenderReply struct {
	ErrorCode            int64    `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	GameAns              int64    `protobuf:"varint,2,opt,name=gameAns,proto3" json:"gameAns,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SurrenderReply) Reset()         { *m = SurrenderReply{} }
func (m *SurrenderReply) String() string { return proto.CompactTextString(m) }
func (*SurrenderReply) ProtoMessage()    {}
func (*SurrenderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e65ea4a38d573ec9, []int{7}
}

func (m *SurrenderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SurrenderReply.Unmarshal(m, b)
}
func (m *SurrenderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SurrenderReply.Marshal(b, m, deterministic)
}
func (m *SurrenderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SurrenderReply.Merge(m, src)
}
func (m *SurrenderReply) XXX_Size() int {
	return xxx_messageInfo_SurrenderReply.Size(m)
}
func (m *SurrenderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SurrenderReply.DiscardUnknown(m)
}

var xxx_messageInfo_SurrenderReply proto.InternalMessageInfo

func (m *SurrenderReply) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *SurrenderReply) GetGameAns() int64 {
	if m != nil {
		return m.GameAns
	}
	return 0
}

type ChessBoardRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChessBoardRequest) Reset()         { *m = ChessBoardRequest{} }
func (m *ChessBoardRequest) String() string { return proto.CompactTextString(m) }
func (*ChessBoardRequest) ProtoMessage()    {}
func (*ChessBoardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e65ea4a38d573ec9, []int{8}
}

func (m *ChessBoardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChessBoardRequest.Unmarshal(m, b)
}
func (m *ChessBoardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChessBoardRequest.Marshal(b, m, deterministic)
}
func (m *ChessBoardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChessBoardRequest.Merge(m, src)
}
func (m *ChessBoardRequest) XXX_Size() int {
	return xxx_messageInfo_ChessBoardRequest.Size(m)
}
func (m *ChessBoardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChessBoardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChessBoardRequest proto.InternalMessageInfo

type Point struct {
	Row                  int64    `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Column               int64    `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_e65ea4a38d573ec9, []int{9}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetRow() int64 {
	if m != nil {
		return m.Row
	}
	return 0
}

func (m *Point) GetColumn() int64 {
	if m != nil {
		return m.Column
	}
	return 0
}

type ChessBoardReplay struct {
	Points               []*Point `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChessBoardReplay) Reset()         { *m = ChessBoardReplay{} }
func (m *ChessBoardReplay) String() string { return proto.CompactTextString(m) }
func (*ChessBoardReplay) ProtoMessage()    {}
func (*ChessBoardReplay) Descriptor() ([]byte, []int) {
	return fileDescriptor_e65ea4a38d573ec9, []int{10}
}

func (m *ChessBoardReplay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChessBoardReplay.Unmarshal(m, b)
}
func (m *ChessBoardReplay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChessBoardReplay.Marshal(b, m, deterministic)
}
func (m *ChessBoardReplay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChessBoardReplay.Merge(m, src)
}
func (m *ChessBoardReplay) XXX_Size() int {
	return xxx_messageInfo_ChessBoardReplay.Size(m)
}
func (m *ChessBoardReplay) XXX_DiscardUnknown() {
	xxx_messageInfo_ChessBoardReplay.DiscardUnknown(m)
}

var xxx_messageInfo_ChessBoardReplay proto.InternalMessageInfo

func (m *ChessBoardReplay) GetPoints() []*Point {
	if m != nil {
		return m.Points
	}
	return nil
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "proto.LoginRequest")
	proto.RegisterType((*LoginReply)(nil), "proto.LoginReply")
	proto.RegisterType((*RegisterRequest)(nil), "proto.RegisterRequest")
	proto.RegisterType((*RegisterReply)(nil), "proto.RegisterReply")
	proto.RegisterType((*PlayRequest)(nil), "proto.PlayRequest")
	proto.RegisterType((*PlayReply)(nil), "proto.PlayReply")
	proto.RegisterType((*SurrenderRequest)(nil), "proto.SurrenderRequest")
	proto.RegisterType((*SurrenderReply)(nil), "proto.SurrenderReply")
	proto.RegisterType((*ChessBoardRequest)(nil), "proto.ChessBoardRequest")
	proto.RegisterType((*Point)(nil), "proto.Point")
	proto.RegisterType((*ChessBoardReplay)(nil), "proto.ChessBoardReplay")
}

func init() { proto.RegisterFile("proto/temp.proto", fileDescriptor_e65ea4a38d573ec9) }

var fileDescriptor_e65ea4a38d573ec9 = []byte{
	// 416 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0xe3, 0xc4, 0xd4, 0xd3, 0x16, 0xdc, 0x29, 0xb4, 0x96, 0xd5, 0x43, 0xb5, 0x42, 0xa8,
	0xa7, 0xa0, 0x86, 0x0b, 0x8a, 0x94, 0x03, 0x18, 0x89, 0x48, 0x20, 0x14, 0x99, 0x03, 0x67, 0x13,
	0x8f, 0x9c, 0x48, 0xb6, 0xd7, 0xec, 0xda, 0x42, 0xfe, 0x4f, 0xfc, 0x48, 0xb4, 0xeb, 0x75, 0x9c,
	0xaf, 0x53, 0x73, 0xf2, 0x7c, 0xbc, 0x79, 0x7e, 0x3b, 0xf3, 0xc0, 0x2b, 0x05, 0xaf, 0xf8, 0xfb,
	0x8a, 0xf2, 0x72, 0xac, 0x43, 0x1c, 0xe9, 0x0f, 0x9b, 0xc3, 0xe5, 0x77, 0x9e, 0xae, 0x8b, 0x88,
	0xfe, 0xd4, 0x24, 0x2b, 0xbc, 0x07, 0x37, 0x53, 0xf9, 0x8f, 0x38, 0x27, 0xdf, 0x7a, 0xb0, 0x1e,
	0xdd, 0xa8, 0x2f, 0x60, 0x00, 0xe7, 0x65, 0x2c, 0xe5, 0x2f, 0x2e, 0x12, 0x7f, 0xa0, 0x9b, 0x9b,
	0x9c, 0x4d, 0x01, 0x0c, 0x53, 0x99, 0x35, 0x88, 0x30, 0x5c, 0xf2, 0xa4, 0xa5, 0xb0, 0x23, 0x1d,
	0xa3, 0x0f, 0x2f, 0x72, 0x92, 0x32, 0x4e, 0xc9, 0x0c, 0x77, 0x29, 0xfb, 0x06, 0xaf, 0x22, 0x4a,
	0xd7, 0xb2, 0x22, 0x71, 0xba, 0x90, 0x19, 0x5c, 0xf5, 0x64, 0xcf, 0xd1, 0x72, 0xb1, 0xc8, 0xe2,
	0xa6, 0xd3, 0x81, 0x30, 0xac, 0x25, 0x89, 0x6e, 0x58, 0xc5, 0xe8, 0x81, 0x2d, 0xf8, 0x5f, 0x3d,
	0x68, 0x47, 0x2a, 0xc4, 0x5b, 0x70, 0x96, 0x3c, 0xab, 0xf3, 0xc2, 0xb7, 0x75, 0xd1, 0x64, 0x2c,
	0x04, 0xb7, 0x25, 0x53, 0x3a, 0xee, 0xc1, 0x25, 0x21, 0xb8, 0x08, 0x7b, 0x31, 0x7d, 0x41, 0x29,
	0x4a, 0xe3, 0x9c, 0x3e, 0x15, 0xd2, 0x10, 0x77, 0x29, 0x7b, 0x07, 0xde, 0xcf, 0x5a, 0x08, 0x2a,
	0x92, 0x7e, 0x3d, 0x47, 0x64, 0xb1, 0x39, 0xbc, 0xdc, 0xc2, 0x9d, 0xf2, 0xc7, 0x1b, 0xb8, 0x0e,
	0x57, 0x24, 0xe5, 0x67, 0x1e, 0x8b, 0xc4, 0xfc, 0x92, 0x3d, 0xc1, 0x68, 0xc1, 0xd7, 0x45, 0xd5,
	0x3d, 0xdf, 0x3a, 0xf6, 0xfc, 0xc1, 0xce, 0xf3, 0x3f, 0x82, 0xb7, 0xcd, 0x53, 0x66, 0x71, 0x83,
	0x6f, 0xc1, 0x29, 0x15, 0x8d, 0xf4, 0xad, 0x07, 0xfb, 0xf1, 0x62, 0x72, 0xd9, 0x1a, 0x72, 0xac,
	0xb9, 0x23, 0xd3, 0x9b, 0xfc, 0x1b, 0x80, 0x13, 0xae, 0x88, 0x24, 0xe1, 0x13, 0x8c, 0xb4, 0xb1,
	0xf0, 0xc6, 0x20, 0xb7, 0x0d, 0x1b, 0x5c, 0xef, 0x16, 0xcb, 0xac, 0x61, 0x67, 0x38, 0x85, 0xf3,
	0xce, 0x02, 0x78, 0x6b, 0x00, 0x7b, 0x06, 0x0b, 0x5e, 0x1f, 0xd4, 0xdb, 0xd9, 0x31, 0x0c, 0xd5,
	0xc9, 0x10, 0x3b, 0x5d, 0xbd, 0x19, 0x02, 0x6f, 0xa7, 0xd6, 0xe2, 0x67, 0xe0, 0x6e, 0xb6, 0x8e,
	0x77, 0x06, 0xb0, 0x7f, 0xaf, 0xe0, 0xcd, 0x61, 0xa3, 0x1d, 0xff, 0x02, 0x57, 0x5f, 0xa9, 0xea,
	0xb7, 0x84, 0xbe, 0x41, 0x1e, 0x1c, 0x20, 0xb8, 0x3b, 0xd2, 0x51, 0x2b, 0x65, 0x67, 0xbf, 0x1d,
	0xdd, 0xf9, 0xf0, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x47, 0x34, 0x84, 0x86, 0xe8, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CheeseClient is the client API for Cheese service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheeseClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error)
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterReply, error)
	Play(ctx context.Context, in *PlayRequest, opts ...grpc.CallOption) (*PlayReply, error)
	Surrender(ctx context.Context, in *SurrenderRequest, opts ...grpc.CallOption) (*SurrenderReply, error)
	GetChessBoard(ctx context.Context, in *ChessBoardRequest, opts ...grpc.CallOption) (*ChessBoardReplay, error)
}

type cheeseClient struct {
	cc *grpc.ClientConn
}

func NewCheeseClient(cc *grpc.ClientConn) CheeseClient {
	return &cheeseClient{cc}
}

func (c *cheeseClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := c.cc.Invoke(ctx, "/proto.Cheese/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cheeseClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterReply, error) {
	out := new(RegisterReply)
	err := c.cc.Invoke(ctx, "/proto.Cheese/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cheeseClient) Play(ctx context.Context, in *PlayRequest, opts ...grpc.CallOption) (*PlayReply, error) {
	out := new(PlayReply)
	err := c.cc.Invoke(ctx, "/proto.Cheese/Play", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cheeseClient) Surrender(ctx context.Context, in *SurrenderRequest, opts ...grpc.CallOption) (*SurrenderReply, error) {
	out := new(SurrenderReply)
	err := c.cc.Invoke(ctx, "/proto.Cheese/Surrender", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cheeseClient) GetChessBoard(ctx context.Context, in *ChessBoardRequest, opts ...grpc.CallOption) (*ChessBoardReplay, error) {
	out := new(ChessBoardReplay)
	err := c.cc.Invoke(ctx, "/proto.Cheese/GetChessBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheeseServer is the server API for Cheese service.
type CheeseServer interface {
	Login(context.Context, *LoginRequest) (*LoginReply, error)
	Register(context.Context, *RegisterRequest) (*RegisterReply, error)
	Play(context.Context, *PlayRequest) (*PlayReply, error)
	Surrender(context.Context, *SurrenderRequest) (*SurrenderReply, error)
	GetChessBoard(context.Context, *ChessBoardRequest) (*ChessBoardReplay, error)
}

// UnimplementedCheeseServer can be embedded to have forward compatible implementations.
type UnimplementedCheeseServer struct {
}

func (*UnimplementedCheeseServer) Login(ctx context.Context, req *LoginRequest) (*LoginReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedCheeseServer) Register(ctx context.Context, req *RegisterRequest) (*RegisterReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedCheeseServer) Play(ctx context.Context, req *PlayRequest) (*PlayReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Play not implemented")
}
func (*UnimplementedCheeseServer) Surrender(ctx context.Context, req *SurrenderRequest) (*SurrenderReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Surrender not implemented")
}
func (*UnimplementedCheeseServer) GetChessBoard(ctx context.Context, req *ChessBoardRequest) (*ChessBoardReplay, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChessBoard not implemented")
}

func RegisterCheeseServer(s *grpc.Server, srv CheeseServer) {
	s.RegisterService(&_Cheese_serviceDesc, srv)
}

func _Cheese_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheeseServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cheese/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheeseServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cheese_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheeseServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cheese/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheeseServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cheese_Play_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheeseServer).Play(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cheese/Play",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheeseServer).Play(ctx, req.(*PlayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cheese_Surrender_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SurrenderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheeseServer).Surrender(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cheese/Surrender",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheeseServer).Surrender(ctx, req.(*SurrenderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cheese_GetChessBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChessBoardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheeseServer).GetChessBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cheese/GetChessBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheeseServer).GetChessBoard(ctx, req.(*ChessBoardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cheese_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Cheese",
	HandlerType: (*CheeseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Cheese_Login_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _Cheese_Register_Handler,
		},
		{
			MethodName: "Play",
			Handler:    _Cheese_Play_Handler,
		},
		{
			MethodName: "Surrender",
			Handler:    _Cheese_Surrender_Handler,
		},
		{
			MethodName: "GetChessBoard",
			Handler:    _Cheese_GetChessBoard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/temp.proto",
}
